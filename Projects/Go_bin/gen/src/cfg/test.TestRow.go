
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
package cfg

import (
    "bright/serialization"
)



type Test_TestRow struct {
    X int32
    Y bool
    Z string
    A *Test_Test3
    B []int32
}

func (Test_TestRow) GetTypeId() int {
    return -543222164
}

func NewTest_TestRow(_buf *serialization.ByteBuf) (_v *Test_TestRow, err error) {
    _v = &Test_TestRow{}
    { if _v.X, err = _buf.ReadInt(); err != nil { return } }
    { if _v.Y, err = _buf.ReadBool(); err != nil { return } }
    { if _v.Z, err = _buf.ReadString(); err != nil { return } }
    { if _v.A, err = NewTest_Test3(_buf); err != nil { return } }
     {
                _v.B = make([]int32, 0)
                var _n_ int
                if _n_, err = _buf.ReadSize(); err != nil {return}
                for i := 0 ; i < _n_ ; i++ {
                    var _e_ int32
                    { if _e_, err = _buf.ReadInt(); err != nil { return } }
                    _v.B = append(_v.B, _e_)
                }
            }

    return
}
