
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

package cfg.item;

public enum EMinorType
{
    DIAMOND(101),
    GOLD(102),
    SILVER(103),
    EXP(104),
    POWER_POINT(105),
    HAIR_STYLE(210),
    COAT(220),
    UPPER_JACKET(230),
    TROUSERS(241),
    SKIRT(242),
    SOCKS(250),
    SHOES(260),
    HAIR_ACCESSORY(271),
    HAT(272),
    EARRING(273),
    NECKLACE(274),
    BRACELET(275),
    HAIR_CLASP(276),
    GLOVE(277),
    HANDHELD_OBJECT(278),
    SPECIAL(279),
    BASE_COSMETIC(281),
    EYEBROW_COSMETIC(282),
    EYELASH(283),
    COSMETIC_CONTACT_LENSES(284),
    LIP_COSMETIC(285),
    SKIN_COLOR(286),
    ONE_PIECE_DRESS(290),
    SWITCH_CLOTHES_SCENE(291),
    QUEST(301),
    CAST(401),
    SWORD(421),
    BOW_ARROW(422),
    WANDS(423),
    SPECIAL_TOOL(424),
    FOOD(403),
    TREASURE_BOX(501),
    KEY(502),
    MULTI_CHOOSE_TREASURE_BOX(503),
    ACHIEVEMENT(601),
    TITLE(602),
    AVATAR_FRAME(701),
    VOICE(801),
    IDLE_POSE(901),
    PHOTO_POSE(902),
    BAG(1001),
    FRIEND_CAPACITY(1002),
    CONSTRUCTION_MATERIAL(1101),
    DESIGN_DRAWING(1102),
    ;

    private final int value;

    public int getValue() {
        return value;
    }

    EMinorType(int value) {
        this.value = value;
    }

    public static EMinorType valueOf(int value) {
        if (value == 101) return DIAMOND;
        if (value == 102) return GOLD;
        if (value == 103) return SILVER;
        if (value == 104) return EXP;
        if (value == 105) return POWER_POINT;
        if (value == 210) return HAIR_STYLE;
        if (value == 220) return COAT;
        if (value == 230) return UPPER_JACKET;
        if (value == 241) return TROUSERS;
        if (value == 242) return SKIRT;
        if (value == 250) return SOCKS;
        if (value == 260) return SHOES;
        if (value == 271) return HAIR_ACCESSORY;
        if (value == 272) return HAT;
        if (value == 273) return EARRING;
        if (value == 274) return NECKLACE;
        if (value == 275) return BRACELET;
        if (value == 276) return HAIR_CLASP;
        if (value == 277) return GLOVE;
        if (value == 278) return HANDHELD_OBJECT;
        if (value == 279) return SPECIAL;
        if (value == 281) return BASE_COSMETIC;
        if (value == 282) return EYEBROW_COSMETIC;
        if (value == 283) return EYELASH;
        if (value == 284) return COSMETIC_CONTACT_LENSES;
        if (value == 285) return LIP_COSMETIC;
        if (value == 286) return SKIN_COLOR;
        if (value == 290) return ONE_PIECE_DRESS;
        if (value == 291) return SWITCH_CLOTHES_SCENE;
        if (value == 301) return QUEST;
        if (value == 401) return CAST;
        if (value == 421) return SWORD;
        if (value == 422) return BOW_ARROW;
        if (value == 423) return WANDS;
        if (value == 424) return SPECIAL_TOOL;
        if (value == 403) return FOOD;
        if (value == 501) return TREASURE_BOX;
        if (value == 502) return KEY;
        if (value == 503) return MULTI_CHOOSE_TREASURE_BOX;
        if (value == 601) return ACHIEVEMENT;
        if (value == 602) return TITLE;
        if (value == 701) return AVATAR_FRAME;
        if (value == 801) return VOICE;
        if (value == 901) return IDLE_POSE;
        if (value == 902) return PHOTO_POSE;
        if (value == 1001) return BAG;
        if (value == 1002) return FRIEND_CAPACITY;
        if (value == 1101) return CONSTRUCTION_MATERIAL;
        if (value == 1102) return DESIGN_DRAWING;
        throw new IllegalArgumentException("");
    }
}

