
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

package cfg

type JsonLoader func(string) ([]map[string]interface{}, error)

type Tables struct {
    TbBlackboard *Ai_TbBlackboard
    TbBehaviorTree *Ai_TbBehaviorTree
    TbClazz *Blueprint_TbClazz
    TbDrop *Bonus_TbDrop
    TbGlobalConfig *Common_TbGlobalConfig
    TbErrorInfo *Error_TbErrorInfo
    TbCodeInfo *Error_TbCodeInfo
    TbItem *Item_TbItem
    TbItemFunc *Item_TbItemFunc
    TbItemExtra *Item_TbItemExtra
    TbL10NDemo *L10n_TbL10NDemo
    TbPatchDemo *L10n_TbPatchDemo
    TbSystemMail *Mail_TbSystemMail
    TbGlobalMail *Mail_TbGlobalMail
    TbRoleLevelExpAttr *Role_TbRoleLevelExpAttr
    TbRoleLevelBonusCoefficient *Role_TbRoleLevelBonusCoefficient
    TbTestTag *Tag_TbTestTag
    TbFullTypes *Test_TbFullTypes
    TbSingleton *Test_TbSingleton
    TbDataFromMisc *Test_TbDataFromMisc
    TbMultiRowRecord *Test_TbMultiRowRecord
    TbMultiRowTitle *Test_TbMultiRowTitle
    TbTestNull *Test_TbTestNull
    TbDemoPrimitive *Test_TbDemoPrimitive
    TbTestString *Test_TbTestString
    TbDemoGroup *Test_TbDemoGroup
    TbDemoGroup_C *Test_TbDemoGroup_C
    TbDemoGroup_S *Test_TbDemoGroup_S
    TbDemoGroup_E *Test_TbDemoGroup_E
    TbTestGlobal *Test_TbTestGlobal
    TbTestBeRef *Test_TbTestBeRef
    TbTestRef *Test_TbTestRef
    TbDetectCsvEncoding *Test_TbDetectCsvEncoding
    TbDefineFromExcel *Test_TbDefineFromExcel
    TbDefineFromExcelOne *Test_TbDefineFromExcelOne
    TbTestIndex *Test_TbTestIndex
    TbTestMap *Test_TbTestMap
    TbExcelFromJson *Test_TbExcelFromJson
    TbCompositeJsonTable1 *Test_TbCompositeJsonTable1
    TbCompositeJsonTable2 *Test_TbCompositeJsonTable2
    TbCompositeJsonTable3 *Test_TbCompositeJsonTable3
    TbExcelFromJsonMultiRow *Test_TbExcelFromJsonMultiRow
    TbDemoGroupDefineFromExcel *Test_TbDemoGroupDefineFromExcel
    TbDefineFromExcel2 *Test_TbDefineFromExcel2
    TbTestExcelBean *Test_TbTestExcelBean
    TbTestDesc *Test_TbTestDesc
}

func NewTables(loader JsonLoader) (*Tables, error) {
    var err error
    var buf []map[string]interface{}

    tables := &Tables{}
    if buf, err = loader("ai_tbblackboard") ; err != nil {
        return nil, err
    }
    if tables.TbBlackboard, err = NewAi_TbBlackboard(buf) ; err != nil {
        return nil, err
    }
    if buf, err = loader("ai_tbbehaviortree") ; err != nil {
        return nil, err
    }
    if tables.TbBehaviorTree, err = NewAi_TbBehaviorTree(buf) ; err != nil {
        return nil, err
    }
    if buf, err = loader("blueprint_tbclazz") ; err != nil {
        return nil, err
    }
    if tables.TbClazz, err = NewBlueprint_TbClazz(buf) ; err != nil {
        return nil, err
    }
    if buf, err = loader("bonus_tbdrop") ; err != nil {
        return nil, err
    }
    if tables.TbDrop, err = NewBonus_TbDrop(buf) ; err != nil {
        return nil, err
    }
    if buf, err = loader("common_tbglobalconfig") ; err != nil {
        return nil, err
    }
    if tables.TbGlobalConfig, err = NewCommon_TbGlobalConfig(buf) ; err != nil {
        return nil, err
    }
    if buf, err = loader("error_tberrorinfo") ; err != nil {
        return nil, err
    }
    if tables.TbErrorInfo, err = NewError_TbErrorInfo(buf) ; err != nil {
        return nil, err
    }
    if buf, err = loader("error_tbcodeinfo") ; err != nil {
        return nil, err
    }
    if tables.TbCodeInfo, err = NewError_TbCodeInfo(buf) ; err != nil {
        return nil, err
    }
    if buf, err = loader("item_tbitem") ; err != nil {
        return nil, err
    }
    if tables.TbItem, err = NewItem_TbItem(buf) ; err != nil {
        return nil, err
    }
    if buf, err = loader("item_tbitemfunc") ; err != nil {
        return nil, err
    }
    if tables.TbItemFunc, err = NewItem_TbItemFunc(buf) ; err != nil {
        return nil, err
    }
    if buf, err = loader("item_tbitemextra") ; err != nil {
        return nil, err
    }
    if tables.TbItemExtra, err = NewItem_TbItemExtra(buf) ; err != nil {
        return nil, err
    }
    if buf, err = loader("l10n_tbl10ndemo") ; err != nil {
        return nil, err
    }
    if tables.TbL10NDemo, err = NewL10n_TbL10NDemo(buf) ; err != nil {
        return nil, err
    }
    if buf, err = loader("l10n_tbpatchdemo") ; err != nil {
        return nil, err
    }
    if tables.TbPatchDemo, err = NewL10n_TbPatchDemo(buf) ; err != nil {
        return nil, err
    }
    if buf, err = loader("mail_tbsystemmail") ; err != nil {
        return nil, err
    }
    if tables.TbSystemMail, err = NewMail_TbSystemMail(buf) ; err != nil {
        return nil, err
    }
    if buf, err = loader("mail_tbglobalmail") ; err != nil {
        return nil, err
    }
    if tables.TbGlobalMail, err = NewMail_TbGlobalMail(buf) ; err != nil {
        return nil, err
    }
    if buf, err = loader("role_tbrolelevelexpattr") ; err != nil {
        return nil, err
    }
    if tables.TbRoleLevelExpAttr, err = NewRole_TbRoleLevelExpAttr(buf) ; err != nil {
        return nil, err
    }
    if buf, err = loader("role_tbrolelevelbonuscoefficient") ; err != nil {
        return nil, err
    }
    if tables.TbRoleLevelBonusCoefficient, err = NewRole_TbRoleLevelBonusCoefficient(buf) ; err != nil {
        return nil, err
    }
    if buf, err = loader("tag_tbtesttag") ; err != nil {
        return nil, err
    }
    if tables.TbTestTag, err = NewTag_TbTestTag(buf) ; err != nil {
        return nil, err
    }
    if buf, err = loader("test_tbfulltypes") ; err != nil {
        return nil, err
    }
    if tables.TbFullTypes, err = NewTest_TbFullTypes(buf) ; err != nil {
        return nil, err
    }
    if buf, err = loader("test_tbsingleton") ; err != nil {
        return nil, err
    }
    if tables.TbSingleton, err = NewTest_TbSingleton(buf) ; err != nil {
        return nil, err
    }
    if buf, err = loader("test_tbdatafrommisc") ; err != nil {
        return nil, err
    }
    if tables.TbDataFromMisc, err = NewTest_TbDataFromMisc(buf) ; err != nil {
        return nil, err
    }
    if buf, err = loader("test_tbmultirowrecord") ; err != nil {
        return nil, err
    }
    if tables.TbMultiRowRecord, err = NewTest_TbMultiRowRecord(buf) ; err != nil {
        return nil, err
    }
    if buf, err = loader("test_tbmultirowtitle") ; err != nil {
        return nil, err
    }
    if tables.TbMultiRowTitle, err = NewTest_TbMultiRowTitle(buf) ; err != nil {
        return nil, err
    }
    if buf, err = loader("test_tbtestnull") ; err != nil {
        return nil, err
    }
    if tables.TbTestNull, err = NewTest_TbTestNull(buf) ; err != nil {
        return nil, err
    }
    if buf, err = loader("test_tbdemoprimitive") ; err != nil {
        return nil, err
    }
    if tables.TbDemoPrimitive, err = NewTest_TbDemoPrimitive(buf) ; err != nil {
        return nil, err
    }
    if buf, err = loader("test_tbteststring") ; err != nil {
        return nil, err
    }
    if tables.TbTestString, err = NewTest_TbTestString(buf) ; err != nil {
        return nil, err
    }
    if buf, err = loader("test_tbdemogroup") ; err != nil {
        return nil, err
    }
    if tables.TbDemoGroup, err = NewTest_TbDemoGroup(buf) ; err != nil {
        return nil, err
    }
    if buf, err = loader("test_tbdemogroup_c") ; err != nil {
        return nil, err
    }
    if tables.TbDemoGroup_C, err = NewTest_TbDemoGroup_C(buf) ; err != nil {
        return nil, err
    }
    if buf, err = loader("test_tbdemogroup_s") ; err != nil {
        return nil, err
    }
    if tables.TbDemoGroup_S, err = NewTest_TbDemoGroup_S(buf) ; err != nil {
        return nil, err
    }
    if buf, err = loader("test_tbdemogroup_e") ; err != nil {
        return nil, err
    }
    if tables.TbDemoGroup_E, err = NewTest_TbDemoGroup_E(buf) ; err != nil {
        return nil, err
    }
    if buf, err = loader("test_tbtestglobal") ; err != nil {
        return nil, err
    }
    if tables.TbTestGlobal, err = NewTest_TbTestGlobal(buf) ; err != nil {
        return nil, err
    }
    if buf, err = loader("test_tbtestberef") ; err != nil {
        return nil, err
    }
    if tables.TbTestBeRef, err = NewTest_TbTestBeRef(buf) ; err != nil {
        return nil, err
    }
    if buf, err = loader("test_tbtestref") ; err != nil {
        return nil, err
    }
    if tables.TbTestRef, err = NewTest_TbTestRef(buf) ; err != nil {
        return nil, err
    }
    if buf, err = loader("test_tbdetectcsvencoding") ; err != nil {
        return nil, err
    }
    if tables.TbDetectCsvEncoding, err = NewTest_TbDetectCsvEncoding(buf) ; err != nil {
        return nil, err
    }
    if buf, err = loader("test_tbdefinefromexcel") ; err != nil {
        return nil, err
    }
    if tables.TbDefineFromExcel, err = NewTest_TbDefineFromExcel(buf) ; err != nil {
        return nil, err
    }
    if buf, err = loader("test_tbdefinefromexcelone") ; err != nil {
        return nil, err
    }
    if tables.TbDefineFromExcelOne, err = NewTest_TbDefineFromExcelOne(buf) ; err != nil {
        return nil, err
    }
    if buf, err = loader("test_tbtestindex") ; err != nil {
        return nil, err
    }
    if tables.TbTestIndex, err = NewTest_TbTestIndex(buf) ; err != nil {
        return nil, err
    }
    if buf, err = loader("test_tbtestmap") ; err != nil {
        return nil, err
    }
    if tables.TbTestMap, err = NewTest_TbTestMap(buf) ; err != nil {
        return nil, err
    }
    if buf, err = loader("test_tbexcelfromjson") ; err != nil {
        return nil, err
    }
    if tables.TbExcelFromJson, err = NewTest_TbExcelFromJson(buf) ; err != nil {
        return nil, err
    }
    if buf, err = loader("test_tbcompositejsontable1") ; err != nil {
        return nil, err
    }
    if tables.TbCompositeJsonTable1, err = NewTest_TbCompositeJsonTable1(buf) ; err != nil {
        return nil, err
    }
    if buf, err = loader("test_tbcompositejsontable2") ; err != nil {
        return nil, err
    }
    if tables.TbCompositeJsonTable2, err = NewTest_TbCompositeJsonTable2(buf) ; err != nil {
        return nil, err
    }
    if buf, err = loader("test_tbcompositejsontable3") ; err != nil {
        return nil, err
    }
    if tables.TbCompositeJsonTable3, err = NewTest_TbCompositeJsonTable3(buf) ; err != nil {
        return nil, err
    }
    if buf, err = loader("test_tbexcelfromjsonmultirow") ; err != nil {
        return nil, err
    }
    if tables.TbExcelFromJsonMultiRow, err = NewTest_TbExcelFromJsonMultiRow(buf) ; err != nil {
        return nil, err
    }
    if buf, err = loader("test_tbdemogroupdefinefromexcel") ; err != nil {
        return nil, err
    }
    if tables.TbDemoGroupDefineFromExcel, err = NewTest_TbDemoGroupDefineFromExcel(buf) ; err != nil {
        return nil, err
    }
    if buf, err = loader("test_tbdefinefromexcel2") ; err != nil {
        return nil, err
    }
    if tables.TbDefineFromExcel2, err = NewTest_TbDefineFromExcel2(buf) ; err != nil {
        return nil, err
    }
    if buf, err = loader("test_tbtestexcelbean") ; err != nil {
        return nil, err
    }
    if tables.TbTestExcelBean, err = NewTest_TbTestExcelBean(buf) ; err != nil {
        return nil, err
    }
    if buf, err = loader("test_tbtestdesc") ; err != nil {
        return nil, err
    }
    if tables.TbTestDesc, err = NewTest_TbTestDesc(buf) ; err != nil {
        return nil, err
    }
    return tables, nil
}
