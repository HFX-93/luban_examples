
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
package cfg.test;

import com.google.gson.JsonElement;
import com.google.gson.JsonObject;



public final class TestJson2 {
    public TestJson2(JsonObject __json__) { 
        id = __json__.get("id").getAsInt();
        { var _json0_ = __json__.get("m1").getAsJsonArray(); m1 = new java.util.HashMap<Integer, Integer>(_json0_.size()); for(JsonElement __e : _json0_) { int __k;  __k = __e.getAsJsonArray().get(0).getAsInt(); int __v;  __v = __e.getAsJsonArray().get(1).getAsInt();  m1.put(__k, __v); }   }
        { var _json0_ = __json__.get("m2").getAsJsonArray(); m2 = new java.util.HashMap<Long, Integer>(_json0_.size()); for(JsonElement __e : _json0_) { long __k;  __k = __e.getAsJsonArray().get(0).getAsLong(); int __v;  __v = __e.getAsJsonArray().get(1).getAsInt();  m2.put(__k, __v); }   }
        { var _json0_ = __json__.get("m3").getAsJsonArray(); m3 = new java.util.HashMap<String, Integer>(_json0_.size()); for(JsonElement __e : _json0_) { String __k;  __k = __e.getAsJsonArray().get(0).getAsString(); int __v;  __v = __e.getAsJsonArray().get(1).getAsInt();  m3.put(__k, __v); }   }
        { var _json0_ = __json__.get("m4").getAsJsonArray(); m4 = new java.util.HashMap<String, cfg.test.DemoType1>(_json0_.size()); for(JsonElement __e : _json0_) { String __k;  __k = __e.getAsJsonArray().get(0).getAsString(); cfg.test.DemoType1 __v;  __v = new cfg.test.DemoType1(__e.getAsJsonArray().get(1).getAsJsonObject());  m4.put(__k, __v); }   }
    }

    public TestJson2(int id, java.util.HashMap<Integer, Integer> m1, java.util.HashMap<Long, Integer> m2, java.util.HashMap<String, Integer> m3, java.util.HashMap<String, cfg.test.DemoType1> m4 ) {
        this.id = id;
        this.m1 = m1;
        this.m2 = m2;
        this.m3 = m3;
        this.m4 = m4;
    }

    public static TestJson2 deserializeTestJson2(JsonObject __json__) {
        return new TestJson2(__json__);
    }

    public final int id;
    public final java.util.HashMap<Integer, Integer> m1;
    public final java.util.HashMap<Long, Integer> m2;
    public final java.util.HashMap<String, Integer> m3;
    public final java.util.HashMap<String, cfg.test.DemoType1> m4;


    public void resolve(java.util.HashMap<String, Object> _tables) {
        for(cfg.test.DemoType1 _e : m4.values()) { if (_e != null) _e.resolve(_tables); }
    }

    @Override
    public String toString() {
        return "{ "
        + "id:" + id + ","
        + "m1:" + m1 + ","
        + "m2:" + m2 + ","
        + "m3:" + m3 + ","
        + "m4:" + m4 + ","
        + "}";
    }
}
