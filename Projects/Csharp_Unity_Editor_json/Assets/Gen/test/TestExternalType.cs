//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
using Bright.Serialization;
using System.Collections.Generic;
using SimpleJSON;



namespace editor.cfg.test
{

public sealed partial class TestExternalType :  Bright.Config.EditorBeanBase 
{
    public TestExternalType()
    {
            AudioType = "UNKNOWN";
            Color = new test.Color();
    }

    public override void LoadJson(SimpleJSON.JSONObject _json)
    {
        { 
            var _fieldJson = _json["id"];
            if (_fieldJson != null)
            {
                if(!_fieldJson.IsNumber) { throw new SerializationException(); }  Id = _fieldJson;
            }
        }
        
        { 
            var _fieldJson = _json["audio_type"];
            if (_fieldJson != null)
            {
                if(!_fieldJson.IsString) { throw new SerializationException(); }  AudioType = _fieldJson;
            }
        }
        
        { 
            var _fieldJson = _json["color"];
            if (_fieldJson != null)
            {
                if(!_fieldJson.IsObject) { throw new SerializationException(); }  Color = test.Color.LoadJsonColor(_fieldJson);
            }
        }
        
    }

    public override void SaveJson(SimpleJSON.JSONObject _json)
    {        
        {
            _json["id"] = new JSONNumber(Id);
        }
        {
            _json["audio_type"] = new JSONString(AudioType);
        }
        {

            if (Color == null) { throw new System.ArgumentNullException(); }
            { var __bjson = new JSONObject();  test.Color.SaveJsonColor(Color, __bjson); _json["color"] = __bjson; }
        }
    }

    public static TestExternalType LoadJsonTestExternalType(SimpleJSON.JSONNode _json)
    {
        TestExternalType obj = new test.TestExternalType();
        obj.LoadJson((SimpleJSON.JSONObject)_json);
        return obj;
    }
        
    public static void SaveJsonTestExternalType(TestExternalType _obj, SimpleJSON.JSONNode _json)
    {
        _obj.SaveJson((SimpleJSON.JSONObject)_json);
    }

    public int Id { get; set; }

    public string AudioType { get; set; }

    public test.Color Color { get; set; }

}
}
